<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qv2raynode.github.io/news/article-27689.htm" />
    <!--====== Required meta tags ======-->
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>MySQL性能优化 &#8211; 别再只会说加索引了_在线工具</title>
        <meta name="description" content="MySQL性能优化我们可以从以下四个维度考虑：硬件升级、系统配置、表结构设计、SQL语句和索引。  从成本上来说：硬件升级&gt;系统配置&gt;表结构设计&gt;SQL语句及索引，然而效果却是由低到" />
        <link rel="icon" href="/assets/website/img/qv2raynode/favicon.ico" type="image/x-icon"/>
    <!--====== Bootstrap css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/bootstrap.min.css">
    <!--====== Fontawesome css ======-->
    <link rel="stylesheet" href="/assets/website/fonts/qv2raynode/fontawesome/css/all.css">
    <!--====== Fontawesome css ======-->
    <link rel="stylesheet" href="/assets/website/fonts/qv2raynode/flaticon/flaticon.css">
    <!--====== Magnific Popup css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/magnific-popup.css">
    <!--====== Slick css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/slick.css">
    <!--====== Nice select css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/nice-select.css">
    <!--====== Default css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/default.css">
    <!--====== Style css ======-->
    <link rel="stylesheet" href="/assets/website/css/qv2raynode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-J9XWNVB56T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J9XWNVB56T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--====== Start Preloader ======-->
    <div class="preloader">
        <div class="lds-ellipsis">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </div>
    <!--====== End Preloader ======-->
    <!--====== Start Header ======-->
    <header class="header-area header-area-v1">
        <div class="header-navigation">
            <div class="container-fluid">
                <div class="row align-items-center">
                    <div class="col-lg-2 col-md-6 col-6">
                        <div class="site-branding">
                            <div class="brand-logo">
                                <a href="/">
                                                                        <span>QV2ray Node</span>
                                                                    </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-7 col-md-4 col-4">
                        <div class="nav-menu">
                            <!-- Mobile Menu Logo -->
                            <div class="site-branding text-center ml-2 mr-2 mb-4 d-none">
                                <div class="brand-logo">
                                    <a href="/">
                                        QV2ray Node
                                    </a>
                                </div>
                            </div>
                            <!-- navbar-close -->
                            <div class="navbar-close">
                                <div class="cross-wrap"><span class="top"></span><span class="bottom"></span></div>
                            </div>
                            <!-- main menu -->
                            <nav class="main-menu">
                                <ul>
                                                                        <li class="menu-item"><a href="/">首页</a></li>
                                                                        <li class="menu-item"><a href="/free-nodes/">免费节点</a></li>
                                                                        <li class="menu-item"><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li class="menu-item"><a href="/news/">新闻资讯</a></li>
                                                                        <li class="menu-item"><a href="#">关于</a></li>
                                    <li class="menu-item"><a href="#">联系</a></li>
                                </ul>
                            </nav>
                        </div>
                        <!-- navbar toggler -->
                        <div class="navbar-toggler float-right">
                            <span></span><span></span><span></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!--====== End Header ======-->
    <!--====== Start breadcrumbs-section section ======-->
    <section class="breadcrumbs-section bg_cover" style="background-image: url(/assets/website/img/qv2raynode/bg/breadcrumbs-bg.jpg);">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="breadcrumbs-content text-center">
                        <h1>MySQL性能优化 &#8211; 别再只会说加索引了_在线工具</h1>
                        <ul class="link">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li class="active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--====== End breadcrumbs-section section ======-->
    <!--====== Start About Section ======-->
    <section class="about-area-v1 pb-60 pt-60">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				</h1> <p>MySQL性能优化我们可以从以下四个维度考虑：硬件升级、系统配置、表结构设计、SQL语句和索引。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/cebfa3a8e464aa69bd16d9957aea0f6c.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>从成本上来说：硬件升级&gt;系统配置&gt;表结构设计&gt;SQL语句及索引，然而效果却是由低到高。所以我们在优化的时候还是尽量从SQL语句和索引开始入手。</p> <h3 id="硬件升级">硬件升级</h3> <p>硬件升级这里不在过多赘述，升级更好配置的机器、机械硬盘更换为SSD等等。</p> <h3 id="系统配置优化">系统配置优化</h3> <ol> <li>调整buffer_pool</li> </ol> <p>通过调整buffer_pool使数据尽量从内存中读取，最大限度的降低磁盘操作，这样可以提升性能。查看buffer_pool数据的方法：</p> <pre><code>SHOW GLOBAL STATUS LIKE 'innodb_buffer_pool_page_%'</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/d115ae0115d0db68e0754d45545a6ab5.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>可以看出总页数8192，空闲页数1024。</p> <pre><code>//查看buffer_pool大小 SELECT @@innodb_buffer_pool_size/1024/1024</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/845d227f7db43136a7dee6c07333a030.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>innodb_buffer_pool_size默认为128M，理论上可以扩大到内存的3/4或4/5。我们修改mysql配置文件my.cnf,增加如下配置：</p> <pre><code>innodb_buffer_pool_size = 750M</code></pre> <p>然后重启MySQL。<br /> 2. 数据预热</p> <p>默认情况下，某条数据被读取过一次才会被缓存在innodb_buffer_pool里。所以数据库刚刚启动，可以进行一次数据预热，将磁盘上的数据缓存到内存中去。</p> <p>预热脚本：</p> <pre><code>SELECT DISTINCT &nbsp;CONCAT('SELECT ',ndxcollist,' FROM ',db,'.',tb, &nbsp;&nbsp;' ORDER BY ',ndxcollist,';') SelectQueryToLoadCache &nbsp;&nbsp;FROM &nbsp;( &nbsp;&nbsp;&nbsp;&nbsp;SELECT &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;engine,table_schema db,table_name tb, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index_name,GROUP_CONCAT(column_name ORDER BY seq_in_index) ndxcollist &nbsp;&nbsp;&nbsp;&nbsp;FROM &nbsp;&nbsp;&nbsp;( &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.engine,A.table_schema,A.table_name, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.index_name,A.column_name,A.seq_in_index &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FROM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;information_schema.statistics A INNER JOIN &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT engine,table_schema,table_name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FROM information_schema.tables WHERE engine='InnoDB' &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) B USING (table_schema,table_name) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE B.table_schema NOT IN ('information_schema','mysql') &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ORDER BY table_schema,table_name,index_name,seq_in_index &nbsp;&nbsp;&nbsp;) A &nbsp;&nbsp;&nbsp;&nbsp;GROUP BY table_schema,table_name,index_name &nbsp;) AA ORDER BY db,tb;</code></pre> <p>将脚本保存为：loadtomem.sql</p> <p>执行命令：</p> <pre><code>mysql -uroot -p -AN &lt; /root/loadtomem.sql &gt; /root/loadtomem.sql</code></pre> <p>在需要进行数据预热时就执行下面的命令：</p> <pre><code>mysql -uroot &lt; /root/loadtomem.sql &gt; /dev/null 2&gt;&amp;1</code></pre> <ol start="3"> <li>降低日志的磁盘落盘</li> </ol> <ul> <li>增大redolog，减少落盘次数，innodb_log_file_size设置为0.25 * innodb_buffer_pool_size</li> <li>通用查询日志、慢查询日志可以不开，bin-log要开，慢日志查询可以遇到性能问题再开</li> <li>写redolog策略 调整innodb_flush_log_at_trx_commit参数为0或2。当然涉及安全性非常高的系统（金融等）还是保持默认的就行。<br /> 在配置文件里加上 innodb_flush_log_at_trx_commit =2 即可。</li> </ul> <pre><code>SHOW VARIABLES LIKE 'innodb_flush_log_at_trx_commit'</code></pre> <h3 id="表结构设计优化">表结构设计优化</h3> <ol> <li>设计中间表</li> </ol> <p>设计中间表，一般针对于统计分析功能<br /> 2. 设计冗余字段</p> <p>为减少关联查询，创建合理的冗余字段<br /> 3. 拆表</p> <p>对于字段太多的大表，考虑拆表；对于表中经常不被使用的字段或存储数据比较多的字段，考虑拆表<br /> 4. 主键优化</p> <p>主键类型最好是int类型，建议自增主键（分布式系统下用雪花算法）<br /> 5. 字段的设计</p> <ul> <li>字段的宽度设得尽可能的小。</li> <li>尽量把字段设置为NOT NULL</li> <li>对于某些文本字段，如省份、性别等，我们可以把他们定义为enum类型。在mysql里enum类型被当作数值类型数据来处理，而数值型数据处理起来比文本类型快得多。</li> </ul> <h3 id="sql语句及索引优化">SQL语句及索引优化</h3> <ol> <li>学会用explain分析</li> <li>SQL语句中IN包含的值不应太多</li> </ol> <p>MySQL对IN做了一些优化，将IN中的常量去不存在一个数组里，而且会进行排序。如果数值较多，这些步骤消耗也是比较大的。<br /> 3. SELECT 语句务必指明字段名称</p> <p>SELECT * 增加了很多不必要的消耗（CPU、IO、内存、网络带宽）<br /> 4. 当只需要一条数据时，使用limit<br /> 5. 排序字段加索引<br /> 6. 如果查询条件中其他字段没有索引，少用or</p> <p>or两边的字段中，如果有一个不是索引字段，则会造成该查询都不会走索引的情况。</p> <pre><code> select * from tbiguser where nickname='zy1' or loginname='zhaoyun3';</code></pre> <p>如nickname是索引字段，loginname不是索引字段，则整体不会走索引。可以用union all代替<br /> 7. 尽量用union all代替union</p> <p>union和union all的区别是，union需要将结果集合并再进行唯一性过滤操作，这就会涉及到排序，增加了大量的CPU运算。当然，使用union all的前提条件是两个结果集没有重复数据。<br /> 8. 区分in和exists、not in和not exists</p> <ul> <li>exists：以外表为驱动表，先被访问。适合外表小而内表大的情况</li> <li>in：先执行子查询。适合外表大而内表小的情况<br /> 关于not in和not exists，推荐使用not exists，不仅仅是效率问题，not in可能存在逻辑问题。如何高效的写出一个替代not exists的SQL语句？</li> </ul> <p>原语句：</p> <pre><code>select colname … from A表 where a.id not in (select b.id from B表)</code></pre> <p>优化后的语句：</p> <pre><code>select colname … from A表 Left join B表 on where a.id = b.id where b.id is null</code></pre> <ol start="9"> <li>不建议使用%前缀模糊查询，不会走索引</li> <li>避免在where子句中对字段进行表达式或函数操作</li> <li>避免隐式类型转换  如where age='18',如果确定是int类型，应写为where age = 18;</li> <li>对于联合索引，要遵守最左前缀法则</li> </ol> <p>举例来说索引含有字段id、name、school，可以直接用id字段，也可以id、name这样的顺序，但是name;school都无法使用这个索引。所以在创建联合索引的时候一定要注意索引字段顺序，常用的查询字段放在最前面。<br /> 13. 必要时可以使用force index来强制查询使用某个索引<br /> 14. 注意范围查询语句</p> <p>对于联合索引来说，如果存在范围查询，比如between，&gt;，&lt;等条件时，会造成后面的索引字段失效<br /> 15. 使用JOIN优化</p> <p>LEFT JOIN里左边的表为驱动表，RIGHT JOIN里右边的表为驱动表，而INNER JOIN MySQL会自动找出数据少的表为驱动表</p> <p>注意：</p> <ul> <li>MySQL没有full join，可以用以下方式解决</li> </ul> <pre><code>select * from A left join B on B.name = A.name where B.name is null union all select * from B;</code></pre> <ul> <li>尽量用inner join，避免left join</li> <li>合理利用索引字段作为on的限制字段</li> <li>利用小表去驱动大表</li> </ul> <p>下图是join查询的原理图，从图中可以看出如果能够减少驱动表的话，就能减少嵌套循环中的次数，以减少IO总量及CPU运算的次数。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/bdfa121978ed5c289fa0bae5e75b609a.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p><strong>SQL优化实战案例</strong></p> <p>介绍：tbiguser表有10000000条记录，表结构如下：</p> <pre><code>create table tbiguser( id int primary key auto_increment, nickname varchar(255), loginname varchar(255), age int , sex char(1), status int, address varchar(255) );</code></pre> <p>创建存储过程，并执行，插入一千万条数据</p> <pre><code>CREATE PROCEDURE test_insert() BEGIN DECLARE i INT DEFAULT 1; WHILE i&lt;=10000000 DO insert into tbiguser VALUES(null,concat('zy',i),concat('zhaoyun',i),23,'1',1,'beijing'); SET i=i+1; END WHILE ; commit; END;</code></pre> <pre><code>call test_insert</code></pre> <p>还有tuser1表和tuser2表，两个表结构一致。</p> <pre><code>create table tuser1( id int primary key auto_increment, name varchar(255), address varchar(255) ); create table tuser2( id int primary key auto_increment, name varchar(255), address varchar(255) );</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/5217a8fb5d82559b837e69a84b71c7ed.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>需求：tbiguser表按照地区分组统计求和，并且要求是在tuser1表和tuser2表中出现过的地区。</p> <p>按照需求写出SQL：</p> <pre><code>SELECT COUNT(*) num,address FROM tbiguser WHERE address IN (SELECT address FROM tuser1) GROUP BY address UNION SELECT COUNT(*) num,address FROM tbiguser WHERE address IN (SELECT address FROM tuser2) GROUP BY address</code></pre> <p>执行时间：4.65s</p> <p><strong>第一次优化</strong>：</p> <p>加索引。我们可以给address字段加索引。</p> <pre><code>ALTER TABLE tuser1 ADD INDEX idx_address(address); ALTER TABLE tuser2 ADD INDEX idx_address(address); ALTER TABLE tbiguser ADD INDEX idx_address(address);</code></pre> <p>执行时间0.9s</p> <p>我们用explain分析sql<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/b40092b47c776c2ae93e3eecdfb1ec28.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>发现有两次都扫描了964147行，就是tbiguser这个大表扫描了两次。且有临时表使用。于是我们进行优化</p> <p><strong>第二次优化</strong></p> <pre><code> SELECT COUNT(*) num,address FROM tbiguser WHERE address IN (SELECT address FROM tuser1) OR address IN (SELECT address FROM tuser2) GROUP BY address</code></pre> <p>执行时间0.65s</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/f57d89cbf9c2c0cc28b5bf64ca54431c.jpg" alt="MySQL性能优化 - 别再只会说加索引了_在线工具"></p> <p>没有临时表了，大表也只扫描了一次。</p> <p>另外我尝试这样查询：</p> <pre><code> SELECT COUNT(*) num,address FROM tbiguser WHERE address IN (SELECT address FROM tuser1 UNION ALL SELECT address FROM tuser2)  GROUP BY address</code></pre> <p>执行时间12s。</p> <pre><code>SELECT COUNT(x.id),x.address FROM (SELECT DISTINCT b.* FROM tuser1 a,tbiguser b WHERE a.address=b.address UNION ALL SELECT DISTINCT b.* FROM tuser2 a,tbiguser b WHERE a.address=b.address) X GROUP BY x.address;</code></pre> <p>执行时间5.8s</p> <p>根据实践发现，sql查询优化没有定式，不同的数据量下相同的sql表现是不一样的，需要灵活运用。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-27231.htm">长沙宠物领养 长沙宠物领养中心</a></p>
                                        <p>下一个：<a href="/news/article-27691.htm">动物医院价格标准是多少（动物医院价格标准是多少钱一个月）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-30515.htm" title="【定义+用法+区别+使用场景】escape(),encodeURI(),encodeURIComponent()">【定义+用法+区别+使用场景】escape(),encodeURI(),encodeURIComponent()</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-free-node-subscribe-links.htm" title="11月9日→18.9M/S|2024年最新免费节点QV2ray Node订阅链接地址">11月9日→18.9M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-26319.htm" title="react实战系列起步（mockjs、第一个模块、docusaurus）">react实战系列起步（mockjs、第一个模块、docusaurus）</a></li>
                        <li class="py-2"><a href="/news/article-29087.htm" title="你的编程能力从什么时候开始突飞猛进? 我的回答：2013年，我开始喜欢编程了。">你的编程能力从什么时候开始突飞猛进? 我的回答：2013年，我开始喜欢编程了。</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-22-node-share-links.htm" title="12月22日→19.5M/S|2024年最新免费节点QV2ray Node订阅链接地址">12月22日→19.5M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-19-free-high-speed-nodes.htm" title="12月19日→18.7M/S|2024年最新免费节点QV2ray Node订阅链接地址">12月19日→18.7M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-31001.htm" title="宠物店一只狗大概多少钱（宠物店的狗狗多少钱一只）">宠物店一只狗大概多少钱（宠物店的狗狗多少钱一只）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-14-node-share.htm" title="11月14日→20.9M/S|2024年最新免费节点QV2ray Node订阅链接地址">11月14日→20.9M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-free-node-subscribe.htm" title="12月8日→21.3M/S|2024年最新免费节点QV2ray Node订阅链接地址">12月8日→21.3M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-node-share-links.htm" title="12月6日→21.4M/S|2024年最新免费节点QV2ray Node订阅链接地址">12月6日→21.4M/S|2024年最新免费节点QV2ray Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--====== End About Section ======-->
        <!--====== Start Footer Area ======-->
    <footer class="bebsa-footer footer-v2 bg_cover" style="background-image: url(/assets/website/img/qv2raynode/footer/footer-bg-2.jpg);">
        <div class="copyright-area">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="footer-social">
                            <ul class="social-link">
                                <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                                <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                                <li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
                                <li><a href="#"><i class="fab fa-behance"></i></a></li>
                                <li><a href="#"><i class="fab fa-youtube"></i></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="copyright-text">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">QV2ray Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!--====== End Footer Area ======-->
    <!--====== back-to-top ======-->
    <a href="#" class="back-to-top"><i class="fas fa-angle-up"></i></a>
    <!--====== Jquery js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/qv2raynode/vendor/jquery-1.12.4.min.js"></script>
    <!--====== Bootstrap js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/qv2raynode/popper.min.js"></script>
    <!--====== Slick js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/slick.min.js"></script>
    <!--====== Magnific Popup js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/jquery.magnific-popup.min.js"></script>
    <!--====== Isotope js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/isotope.pkgd.min.js"></script>
    <!--====== Imagesloaded js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/imagesloaded.pkgd.min.js"></script>
    <!--====== Easy Pie Chart ======-->
    <script src="/assets/website/js/frontend/qv2raynode/jquery.easypiechart.min.js"></script>
    <!--====== counterup js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/jquery.counterup.min.js"></script>
    <!--====== waypoints js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/waypoints.min.js"></script>
    <!--====== Nice select js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/jquery.nice-select.min.js"></script>
    <!--====== Main js ======-->
    <script src="/assets/website/js/frontend/qv2raynode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>